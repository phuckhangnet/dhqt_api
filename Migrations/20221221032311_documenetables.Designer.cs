// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace ProjectBE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221221032311_documenetables")]
    partial class documenetables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Project.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CODE")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("CREATEDUSER")
                        .HasColumnType("TEXT");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ENDDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("STARTDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("STATUS")
                        .HasColumnType("TEXT");

                    b.Property<string>("TYPE")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Project.Models.CourseDocument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CODE")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CREATEDUSER")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("TEXT");

                    b.Property<string>("DOCUMENT")
                        .HasColumnType("TEXT");

                    b.Property<string>("FILETYPE")
                        .HasColumnType("TEXT");

                    b.Property<int>("IDCourse")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("CourseDocuments");
                });

            modelBuilder.Entity("Project.Models.CourseFeedBack", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("FEEDBACK")
                        .HasColumnType("TEXT");

                    b.Property<int>("IDCOURSE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDUSER")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("CourseFeedBacks");
                });

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CODE")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("EMAIL")
                        .HasColumnType("TEXT");

                    b.Property<string>("IDENTIFY")
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<string>("PASSWORDHASH")
                        .HasColumnType("TEXT");

                    b.Property<string>("PASSWORDSALT")
                        .HasColumnType("TEXT");

                    b.Property<string>("PHONE")
                        .HasColumnType("TEXT");

                    b.Property<int>("SEX")
                        .HasColumnType("INTEGER");

                    b.Property<string>("STATUS")
                        .HasColumnType("TEXT");

                    b.Property<string>("USERNAME")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project.Models.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CODE")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CREATEDDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("CREATEDUSER")
                        .HasColumnType("TEXT");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<string>("STATUS")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Project.Models.JoinCourse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IDCOURSE")
                        .HasColumnType("TEXT");

                    b.Property<string>("IDMEMBER")
                        .HasColumnType("TEXT");

                    b.Property<string>("TITLE")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("JoinCourses");
                });

            modelBuilder.Entity("Project.Models.JoinGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDGROUP")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IDMEMBER")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("JoinGroups");
                });

            modelBuilder.Entity("Project.Models.Staff", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CODE")
                        .HasColumnType("TEXT");

                    b.Property<string>("EMAIL")
                        .HasColumnType("TEXT");

                    b.Property<string>("IDENTIFY")
                        .HasColumnType("TEXT");

                    b.Property<int>("LEVEL")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<string>("PASSWORDHASH")
                        .HasColumnType("TEXT");

                    b.Property<string>("PASSWORDSALT")
                        .HasColumnType("TEXT");

                    b.Property<string>("PHONE")
                        .HasColumnType("TEXT");

                    b.Property<int>("SEX")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("STARTWORKDATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("STATUS")
                        .HasColumnType("TEXT");

                    b.Property<string>("TITLE")
                        .HasColumnType("TEXT");

                    b.Property<string>("USERNAME")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Staffs");
                });
#pragma warning restore 612, 618
        }
    }
}
